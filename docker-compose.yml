services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_website_optimizer
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: api
    restart: always
    ports:
      - '3000:3000'
      - '5555:5555'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ai_website_optimizer
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-jwt-secret-change-me-in-production
      UPLOAD_DIR: /app/uploads
      BROWSER_POOL_SIZE: 3
      BROWSER_TTL: 1800000
    volumes:
      - upload-data:/app/uploads
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:3000']
      interval: 10s
      timeout: 5s
      retries: 5
    # Увеличиваем лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Добавляем воркеры для обработки задач
  # worker:
  #   build:
  #     context: .
  #     dockerfile: ./apps/api/Dockerfile
  #   command: node apps/api/dist/main.js --worker
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     NODE_ENV: production
  #     DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ai_website_optimizer
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     JWT_SECRET: your-jwt-secret-change-me-in-production
  #     UPLOAD_DIR: /app/uploads
  #     BROWSER_POOL_SIZE: 2
  #     BROWSER_TTL: 1800000
  #     WORKER_ONLY: 'true'
  #   volumes:
  #     - upload-data:/app/uploads
  #   networks:
  #     - app-network
  #   deploy:
  #     replicas: 2
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: 2G

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  upload-data:
